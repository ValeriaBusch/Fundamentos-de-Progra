#include "stdafx.h"
#include <iostream>
#include "conio.h"

#define MAXCOL 20
#define MAXROW 20

using namespace std;

void cargar (int matrix[MAXROW][MAXCOL],int n, int m);
void cargar2 (int matrix[MAXROW][MAXCOL],int n, int m);
void mostrar (int matrix[MAXROW][MAXCOL],int n, int m);
void mostrar2 (int matrix[MAXROW][MAXCOL],int n, int m);
int mayor (int matrix[MAXROW][MAXCOL],int n, int m);
void clasificar_fila(int matrix[MAXROW][MAXCOL],int n, int m);
void suma (int matrix[MAXROW][MAXCOL], int n, int m);

void main()
{
  int n,m, opcion, matriz[MAXROW][MAXCOL];
 
  do 
  {
	  cout<<"Ingrese el numero de filas: ";
	  cin>>n;
	  cout<<"Ingrese el numero de columnas: ";
	  cin>>m;

	  cout<<"-------------MENU------------"<<endl;
      cout<<"1.Cargar Matriz"<<endl;
	  cout<<"2.Mostrar Matriz"<<endl;
	  cout<<"3.Mayor valor de la Matriz"<<endl;
	  cout<<"4.Clasificar Filas"<<endl;
	  cout<<"5.Ejercicio Grupo"<<endl;
	  cout<<"0.SALIR"<<endl;

	  cout <<"Elija una opcion:", cin>>opcion;

      switch (opcion)
	  {
	  case 1:
      cargar (matriz,n,m);
	  break;
	  case 2:
	  mostrar(matriz,n,m);
	  break;
	  case 3:
      cout<<"El mayor valor de la matriz es: "<< mayor(matriz,n,m)<<endl;
	  break;
	  case 4:
      cout<<"CLASIFICACION"<<endl;
      clasificar_fila(matriz,n,m);
      mostrar(matriz,n,m);
	  break;
	  case 5:
	  cargar (matriz,n,m);
	  cargar2 (matriz,n,m);
	  suma(matriz,n,m);
	  break;
	  case 0:
	  cout<<"Usted ha elegido salir del programa"<<endl;
	  break;
	  default: cout<<"ERROR"<<endl;
	  }

   } while (opcion!=0); 
   getch();

}

void cargar(int matrix[MAXROW][MAXCOL],int n, int m)
{int i, j;
 
  for(i=0;i<n;i++)
   for(j=0;j<m;j++)
     {cout<<"MAT ["<<i<<"] ["<<j<<"]: ";
      cin>>matrix[i][j];
     }
}

void cargar2(int matrix[MAXROW][MAXCOL],int n, int m)
{int l, s;
 
  for(l=0;l<n;l++)
   for(s=0;s<m;s++)
     {cout<<"MAT ["<<l<<"] ["<<s<<"]: ";
      cin>>matrix[l][s];
     }
}

void mostrar(int matrix[MAXROW][MAXCOL],int n, int m)
{int i, j;
 
  for(i=0;i<n;i++)
   {for(j=0;j<m;j++)
       cout<<"MAT ["<<i<<"] ["<<j<<"]: "<<matrix[i][j]<<"\t";   
	cout<<endl;
   }
}

void mostrar2(int matrix[MAXROW][MAXCOL],int n, int m)
{int l, s;
 
    for(l=0;l<n;l++)
     for(s=0;s<m;s++)
       cout<<"MAT ["<<l<<"] ["<<s<<"]: "<<matrix[l][s]<<"\t";   
	cout<<endl;
   }
}
int mayor (int matrix[MAXROW][MAXCOL],int n, int m)
{int tmayor,i, j;
 
tmayor= matrix[0][0];
  for(i=0;i<n;i++)
   for(j=0;j<m;j++)
	{ if(tmayor<matrix[i][j])
			tmayor=matrix[i][j];
   
     }
return tmayor;
}
void clasificar_fila(int matrix[MAXROW][MAXCOL],int n, int m)
{int tem;
	for (int i=0;i<n;i++)
	{for (int j=0;j<m-1;j++)
	  {for (int k=j+1;k<m;k++)
	    {if (matrix[i][j]>matrix[i][k])
	    {  tem=matrix[i][k];
	       matrix[i][k]=matrix[i][j];
	       matrix[i][j]=tem;
	    }
	    }
	}
  }

}
void suma (int matrix[MAXROW][MAXCOL], int n, int m)
{
	int suma;
	 for(i=0;i<n;i++)
      for(j=0;j<m;j++)
		  for(l=0;l<n;l++)
            for(s=0;s<m;s++)
				suma=matrix[i][j]+matrix[l][s];
	 return suma;
}
